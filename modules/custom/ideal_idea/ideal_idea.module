<?php
/**
 * Implementation of hook_form_FORM_ID_alter().
 */
function ideal_idea_form_alter(&$form, &$form_state, $form_id) {
  if ($form_id == 'idea_node_form') {
    $path = drupal_get_path('module', 'ideal_idea');
    drupal_add_js($path . '/js/ideal_idea.js');
    drupal_add_css($path . '/css/ideal_idea.css');

    //add placeholders on fields
    $form['title']['#attributes']['placeholder'] = $form['title']['#title'];
    //dvm($form['field_attachments']['und']);

    $form['body']['und'][0]['#attributes']['placeholder'] = $form['body']['und'][0]['#title'];
    $form['field_category']['und']['#options']['_none'] = $form['field_category']['und']['#title'];

    //change submit button
    $form['actions']['submit']['#value'] = '<span>'.t('Submit your Idea').'</span>';
    $form['actions']['submit']['#attributes'] = array('class' => array('submit-idea'));

    //add back button
    $form['actions']['cancel'] = array(
      '#type' => 'button',
      '#access' => TRUE,
      '#value' => '<span>'.t('Back').'</span>',
      '#weight' => 4,
      '#attributes' => array('class' => array('go-back'), 'onClick' => 'history.go(-1);'),
    );

    if (isset($form['actions']['draft'])) {
      $id = array_search('save_draft_submit', $form['actions']['draft']['#submit']);
      if (is_numeric($id)) {
        $form['actions']['draft']['#submit'][$id] = 'ideal_idea_node_form_draft_submit';
      }
    }

    /*
    *************************************************
    * This whole block is commented out since there is a problem with the drag n drop module(s). 
    * Drag n drop works natively in browsers nowdays. 
    * It feels safe to remove this feature from the module
    //upload fields text
    //for images
    $form['field_idea_image']['und']['#file_upload_title'] = '<div class="title">'.t('Add images here').'</div>'.t('Drag & drop images or <a href="#" class="open-browse">browse</a> them from your computer');
    $form['field_idea_image']['und']['#title'] = '';
    $form['field_idea_image']['und']['#file_upload_description'] = '';
    //for documents
    $form['field_attachments']['und']['#file_upload_title'] = '<div class="title">'.t('Add documents here').'</div>'.t('Drag & drop pdf or text files or <a href="#" class="open-browse">browse</a> them from your computer');
    $form['field_attachments']['und']['#title'] = '';
    $form['field_attachments']['und']['#file_upload_description'] = '';
    *************************************************
    */
  }
}

/**
 * Implements hook_theme().
 */
function ideal_idea_theme($existing, $type, $theme, $path) {
  return array(
    'idea_node_form' => array(
      'render element' => 'form',
      'template' => 'idea-node-form',
      // this will set to module/theme path by default:
      'path' => drupal_get_path('module', 'ideal_idea'),
    ),
  );
}

/**
 * Preprocessor for theme('idea_node_form').
 */
function template_preprocess_idea_node_form(&$variables) {
  // nodeformcols is an alternative for this solution.
  if (!module_exists('nodeformcols')) {
    $variables['sidebar'] = array();   // Put taxonomy fields in sidebar.
    $variables['sidebar'][] = $variables['form']['field_idea_image'];
    $variables['sidebar'][] = $variables['form']['field_attachments'];

    hide($variables['form']['field_idea_image']);
    hide($variables['form']['field_attachments']);
    // Extract the form buttons, and put them in independent variable.
    $variables['buttons'] = $variables['form']['actions'];
    hide($variables['form']['actions']);
  }
}

/**
 * Implements hook_block_info().
 */
function ideal_idea_block_info() {
  $blocks = array();
  $blocks['new_idea_open_popup'] = array(
    'info' => t('New Idea - Open modal on load'),
  );
 
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function ideal_idea_block_view($delta='') {
  $block = array();
 
  switch($delta) {
    case 'new_idea_open_popup' :
      $block['content'] = ideal_idea_popup_view();
      break;
  }
 
  return $block;
}

/* Display block */
function ideal_idea_popup_view(){
  global $base_url, $user;
  //check if node was just created
  if(!isset($_SESSION['newnode']) || $_SESSION['newnode'] == 0) return '';
  //get the number of points from the rule
  $rule = rules_config_load('rules_user_add_idea');
  $points = '';
  foreach ($rule->actions() as $action) {
    $points = isset($action->settings) && isset($action->settings['points']) ? $action->settings['points'] : $points;
  }

  //get total user points
  $total_points = token_replace('[user:points]', array('user' => $user));

  //get current node share button
  $field_share_html = '';
  if (arg(0) == 'node' && is_numeric(arg(1))) $nodeid = arg(1);
  if(!empty($nodeid)){
    $node = node_load($nodeid);
    $wrapper = entity_metadata_wrapper('node', $node);
    if(isset($wrapper->field_challenge_ref) && !empty($wrapper->field_challenge_ref)){
      $challenge_ref = $wrapper->field_challenge_ref->value();
      if(!empty($challenge_ref)){
        $challenge_node = node_load($challenge_ref->nid);
        $field_share = field_view_value('node', $challenge_node, 'field_share', 'default');
        $field_share_html = '<span class="share-wrap"><div class="share-content">'.render($field_share).'</div><button type="button" class="btn btn-primary share-btn">'.t('Share your idea').'</button></span>';
      }
      
    }
    
  }
  
  //remove session of new idea node
  $_SESSION['newnode'] = 0;
  unset($_SESSION['newnode']);

  //render popup
  $body = '<p>You successfully submitted your idea and earned <b>'.$points.' points</b></p>
          <p class="total-points">You now have total of <b>'.$total_points.' points</b></p>';
  $buttons = '<a class="btn btn-primary go-home" href="'.$base_url.'" role="button">'.t('Go to Homepage').'</a>
  '.$field_share_html;

  $output = ideal_render_popup_markup(t('Well done!'), $body, $buttons);
  
  return $output;
}

/* Print bootstrap modal markup */
function ideal_render_popup_markup($header = '', $body, $buttons = ''){
  drupal_add_js('(function($) { Drupal.behaviors.ideasavepopup = { attach: function(context) {  $("#popup").modal() } } } )(jQuery);', 'inline');
  $output = '
  <div class="modal fade" id="popup" tabindex="-1" role="dialog" aria-labelledby="popupLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>';
  
  if(!empty($header))
    $output.='<h1 class="modal-title" id="popupLabel">'.$header.'</h1>';

  $output.='
        </div>
        <div class="modal-body">
          '.$body.'
        </div>';
  if(!empty($buttons)){
    $output.='
        <div class="modal-footer">
          '.$buttons.'
        </div>';
  }
  $output.='      
      </div>
    </div>
  </div>';
  return $output;
}

function ideal_idea_node_form_draft_submit($form, &$form_state) {
  node_form_submit($form, $form_state);
  if (!empty($form_state['nid'])) {
    $nid = $form_state['nid'];
    $form_state['redirect'] = ['node/' . $nid . '/edit'];
  }
}
